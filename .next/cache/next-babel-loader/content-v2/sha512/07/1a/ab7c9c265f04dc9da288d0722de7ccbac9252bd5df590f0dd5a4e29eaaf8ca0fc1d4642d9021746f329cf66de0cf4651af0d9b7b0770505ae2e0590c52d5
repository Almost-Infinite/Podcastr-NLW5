{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\luanl\\\\Downloads\\\\XDM Downloads\\\\NLW#5\\\\Projeto\\\\podcastrnext\\\\src\\\\components\\\\DarkMode\\\\index.tsx\";\nimport styles from './styles.module.scss';\nvar imgRef = true;\nexport default function Sol() {\n  var imgs = {\n    sol: '/sol/sol.svg',\n    lua: '/lua/noite.svg'\n  };\n  var state = true;\n  var imgName = '';\n\n  var toggleImage = function toggleImage() {\n    if (state === true) {\n      state = false;\n      imgName = 'lua';\n      console.log(imgName);\n      return imgName;\n    } else {\n      state = true;\n      imgName = 'sol';\n      console.log(imgName);\n      return imgName;\n    }\n  };\n\n  var getImageName = state ? 'sol' : 'lua';\n\n  var imageName = function imageName() {\n    return toggleImage();\n  };\n\n  function toggleDark() {\n    console.log(!imgRef);\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgRef ? imgs.sol : imgs.lua,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.darkMode,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgs[imageName()],\n      onClick: toggleImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c = Sol;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sol\");","map":{"version":3,"sources":["C:/Users/luanl/Downloads/XDM Downloads/NLW#5/Projeto/podcastrnext/src/components/DarkMode/index.tsx"],"names":["styles","imgRef","Sol","imgs","sol","lua","state","imgName","toggleImage","console","log","getImageName","imageName","toggleDark","darkMode"],"mappings":";;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AAOA,IAAIC,MAAM,GAAG,IAAb;AAKA,eAAe,SAASC,GAAT,GAAe;AAC1B,MAAMC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAE,cADI;AAETC,IAAAA,GAAG,EAAE;AAFI,GAAb;AAKA,MAAIC,KAAK,GAAI,IAAb;AAEA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtB,QAAIF,KAAK,KAAK,IAAd,EAAoB;AAChBA,MAAAA,KAAK,GAAG,KAAR;AACAC,MAAAA,OAAO,GAAG,KAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,aAAQA,OAAR;AACH,KALD,MAKM;AACFD,MAAAA,KAAK,GAAG,IAAR;AACAC,MAAAA,OAAO,GAAG,KAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,aAAOA,OAAP;AACH;AACJ,GAbD;;AAeA,MAAMI,YAAY,GAAGL,KAAK,GAAG,KAAH,GAAW,KAArC;;AAEA,MAAIM,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMJ,WAAW,EAAjB;AAAA,GAAhB;;AAEA,WAASK,UAAT,GAAsB;AAClBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACT,MAAb;AAEA,wBAAO;AAAK,MAAA,GAAG,EAAEA,MAAM,GAAGE,IAAI,CAACC,GAAR,GAAcD,IAAI,CAACE,GAAnC;AAAwC,MAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACc,QAAvB;AAAA,2BAEE;AAAK,MAAA,GAAG,EAAEX,IAAI,CAACS,SAAS,EAAV,CAAd;AAA6B,MAAA,OAAO,EAAEJ;AAAtC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;KA7CuBN,G","sourcesContent":["import { useEffect } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet imgRef = true;\r\n\r\n\r\n\r\n\r\nexport default function Sol() {\r\n    const imgs = {\r\n        sol: '/sol/sol.svg',\r\n        lua: '/lua/noite.svg'\r\n    }\r\n    \r\n    let state =  true;\r\n\r\n    let imgName = '';\r\n    const toggleImage = () => {\r\n\r\n        if (state === true) {\r\n            state = false\r\n            imgName = 'lua'\r\n            console.log(imgName)\r\n            return  imgName\r\n        }else {\r\n            state = true\r\n            imgName = 'sol'\r\n            console.log(imgName)\r\n            return imgName\r\n        }\r\n    }\r\n    \r\n    const getImageName = state ? 'sol' : 'lua'    \r\n    \r\n    let imageName = () => toggleImage()\r\n\r\n    function toggleDark() {\r\n        console.log(!imgRef)\r\n\r\n        return <img src={imgRef ? imgs.sol : imgs.lua} alt=\"\" />\r\n\r\n    }  \r\n\r\n    return (\r\n        <div className={styles.darkMode} >\r\n\r\n          <img src={imgs[imageName()]} onClick={toggleImage}/>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}