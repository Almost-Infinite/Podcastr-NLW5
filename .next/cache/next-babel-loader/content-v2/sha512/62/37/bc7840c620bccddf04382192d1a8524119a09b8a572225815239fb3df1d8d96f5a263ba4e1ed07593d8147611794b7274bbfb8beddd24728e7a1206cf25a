{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _readOnlyError from \"C:/Users/luanl/Downloads/XDM Downloads/NLW#5/Projeto/podcastrnext/node_modules/next/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\luanl\\\\Downloads\\\\XDM Downloads\\\\NLW#5\\\\Projeto\\\\podcastrnext\\\\src\\\\components\\\\DarkMode\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styles from './styles.module.scss';\nvar imgRef = true;\nvar state = true;\nexport default function Sol() {\n  _s();\n\n  var imgs = {\n    sol: '/sol/sol.svg',\n    lua: '/lua/noite.svg'\n  };\n\n  var _useState = useState(true),\n      state = _useState[0];\n\n  function imageToggle() {\n    if (state) {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        src: \"/sol/sol.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n\n      state = (_readOnlyError(\"state\"), false);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        src: \"/lua/noite.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n\n      state = (_readOnlyError(\"state\"), true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.darkMode,\n    onClick: function onClick() {\n      return !state;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sol, \"yS1nlikdv2vTfqgnEcsyymg+MZY=\");\n\n_c = Sol;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sol\");","map":{"version":3,"sources":["C:/Users/luanl/Downloads/XDM Downloads/NLW#5/Projeto/podcastrnext/src/components/DarkMode/index.tsx"],"names":["useState","styles","imgRef","state","Sol","imgs","sol","lua","imageToggle","darkMode"],"mappings":";;;;;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAOA,IAAIC,MAAM,GAAG,IAAb;AAAmB,IAAIC,KAAK,GAAG,IAAZ;AAEnB,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,MAAMC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAE,cADI;AAETC,IAAAA,GAAG,EAAE;AAFI,GAAb;;AAD0B,kBAKVP,QAAQ,CAAC,IAAD,CALE;AAAA,MAKnBG,KALmB;;AAU1B,WAASK,WAAT,GAAuB;AACnB,QAAIL,KAAJ,EAAW;AACP;AAAA;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;;AACAA,MAAAA,KAAK,6BAAG,KAAH,CAAL;AACH,KAHD,MAGO;AACH;AAAA;AAAK,QAAA,GAAG,EAAC,gBAAT;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;;AACAA,MAAAA,KAAK,6BAAG,IAAH,CAAL;AAEH;AAEJ;;AACD,sBAII;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACQ,QAAvB;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAM,CAACN,KAAP;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,UAJJ;AAcH;;GAnCuBC,G;;KAAAA,G","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet imgRef = true; let state = true;\r\n\r\nexport default function Sol() {\r\n    const imgs = {\r\n        sol: '/sol/sol.svg',\r\n        lua: '/lua/noite.svg'\r\n    }\r\n    const [state] = useState(true)\r\n\r\n\r\n\r\n    \r\n    function imageToggle() {\r\n        if (state) {\r\n            <img src=\"/sol/sol.svg\" alt=\"\" />\r\n            state = false\r\n        } else {\r\n            <img src=\"/lua/noite.svg\" alt=\"\" />\r\n            state = true\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n           \r\n            \r\n\r\n        <div className={styles.darkMode} onClick={() => !state}>\r\n           \r\n\r\n            {/* <img src={state ? imgs.sol : imgs.lua} onClick={() => state ? state = false : state = true}/> */}\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}