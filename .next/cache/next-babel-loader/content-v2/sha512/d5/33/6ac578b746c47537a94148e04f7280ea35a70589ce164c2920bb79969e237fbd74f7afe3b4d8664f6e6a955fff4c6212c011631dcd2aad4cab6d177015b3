{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\luanl\\\\Downloads\\\\XDM Downloads\\\\NLW#5\\\\Projeto\\\\podcastrnext\\\\src\\\\components\\\\DarkMode\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styles from './styles.module.scss';\nvar imgRef = true;\nvar state = true;\nexport default function Sol() {\n  _s();\n\n  var imgs = {\n    sol: '/sol/sol.svg',\n    lua: '/lua/noite.svg'\n  };\n\n  var _useState = useState(false),\n      isActive = _useState[0],\n      setActive = _useState[1];\n\n  var toggleClass = function toggleClass() {\n    setActive(!isActive);\n  };\n\n  function imageToggle() {\n    if (state) {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        src: \"/sol/sol.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n\n      state = false;\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        src: \"/lua/noite.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n\n      state = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.darkMode,\n    onClick: function onClick() {\n      return !state;\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/sol/sol.svg\",\n      className: isActive ? 'hidden' : null,\n      onClick: toggleClass,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sol, \"NIDogoy7bmTp1+ctz7hxf3NMsLg=\");\n\n_c = Sol;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sol\");","map":{"version":3,"sources":["C:/Users/luanl/Downloads/XDM Downloads/NLW#5/Projeto/podcastrnext/src/components/DarkMode/index.tsx"],"names":["useState","styles","imgRef","state","Sol","imgs","sol","lua","isActive","setActive","toggleClass","imageToggle","darkMode"],"mappings":";;;;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAOA,IAAIC,MAAM,GAAG,IAAb;AAAmB,IAAIC,KAAK,GAAG,IAAZ;AAEnB,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,MAAMC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAE,cADI;AAETC,IAAAA,GAAG,EAAE;AAFI,GAAb;;AAD0B,kBAKIP,QAAQ,CAAC,KAAD,CALZ;AAAA,MAKnBQ,QALmB;AAAA,MAKTC,SALS;;AAO1B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBD,IAAAA,SAAS,CAAC,CAACD,QAAF,CAAT;AACH,GAFD;;AAOA,WAASG,WAAT,GAAuB;AACnB,QAAIR,KAAJ,EAAW;AACP;AAAA;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;;AACAA,MAAAA,KAAK,GAAG,KAAR;AACH,KAHD,MAGO;AACH;AAAA;AAAK,QAAA,GAAG,EAAC,gBAAT;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;;AACAA,MAAAA,KAAK,GAAG,IAAR;AAEH;AAEJ;;AACD,sBAII;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACW,QAAvB;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAM,CAACT,KAAP;AAAA,KAA1C;AAAA,2BAEI;AAAK,MAAA,GAAG,EAAC,cAAT;AAAwB,MAAA,SAAS,EAAEK,QAAQ,GAAG,QAAH,GAAa,IAAxD;AAA+D,MAAA,OAAO,EAAEE,WAAxE;AAAqF,MAAA,GAAG,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAJJ;AAcH;;GAvCuBN,G;;KAAAA,G","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet imgRef = true; let state = true;\r\n\r\nexport default function Sol() {\r\n    const imgs = {\r\n        sol: '/sol/sol.svg',\r\n        lua: '/lua/noite.svg'\r\n    }\r\n    const [isActive, setActive] = useState(false);\r\n\r\n    const toggleClass = () => {\r\n        setActive(!isActive);\r\n    };\r\n\r\n\r\n\r\n\r\n    function imageToggle() {\r\n        if (state) {\r\n            <img src=\"/sol/sol.svg\" alt=\"\" />\r\n            state = false\r\n        } else {\r\n            <img src=\"/lua/noite.svg\" alt=\"\" />\r\n            state = true\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n\r\n\r\n        <div className={styles.darkMode} onClick={() => !state}>\r\n\r\n            <img src=\"/sol/sol.svg\" className={isActive ? 'hidden': null}  onClick={toggleClass} alt=\"\"/>\r\n            {/* <img src={state ? imgs.sol : imgs.lua} onClick={() => state ? state = false : state = true}/> */}\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}