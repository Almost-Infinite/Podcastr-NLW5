{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\luanl\\\\Downloads\\\\XDM Downloads\\\\NLW#5\\\\Projeto\\\\podcastrnext\\\\src\\\\components\\\\DarkMode\\\\index.tsx\";\nimport styles from './styles.module.scss';\nvar imgRef = true;\nvar state = true;\nexport default function Sol() {\n  var imgs = {\n    sol: '/sol/sol.svg',\n    lua: '/lua/noite.svg'\n  };\n  /*  const toggleImage = () => {\r\n      \r\n       !state\r\n       \r\n   }\r\n   \r\n   let getImageName = state ? 'sol' : 'lua'    \r\n   let imageName = getImageName */\n\n  function toggleDark() {\n    console.log(!imgRef);\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgRef ? imgs.sol : imgs.lua,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n  function imageToggle(children) {\n    if (state) {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        src: \"/sol/sol.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n\n      state = false;\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        src: \"/lua/noite.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n\n      state = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.darkMode,\n    onClick: function onClick() {\n      return !state;\n    },\n    children: imageToggle()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c = Sol;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sol\");","map":{"version":3,"sources":["C:/Users/luanl/Downloads/XDM Downloads/NLW#5/Projeto/podcastrnext/src/components/DarkMode/index.tsx"],"names":["styles","imgRef","state","Sol","imgs","sol","lua","toggleDark","console","log","imageToggle","children","darkMode"],"mappings":";;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AAOA,IAAIC,MAAM,GAAG,IAAb;AAAmB,IAAIC,KAAK,GAAG,IAAZ;AAEnB,eAAe,SAASC,GAAT,GAAe;AAC1B,MAAMC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAE,cADI;AAETC,IAAAA,GAAG,EAAE;AAFI,GAAb;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,WAASC,UAAT,GAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACR,MAAb;AAEA,wBAAO;AAAK,MAAA,GAAG,EAAEA,MAAM,GAAGG,IAAI,CAACC,GAAR,GAAcD,IAAI,CAACE,GAAnC;AAAwC,MAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH;;AAED,WAASI,WAAT,CAAqBC,QAArB,EAAwC;AACpC,QAAIT,KAAJ,EAAW;AACP;AAAA;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;;AACAA,MAAAA,KAAK,GAAG,KAAR;AACH,KAHD,MAGO;AACH;AAAA;AAAK,QAAA,GAAG,EAAC,gBAAT;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;;AACAA,MAAAA,KAAK,GAAG,IAAR;AAEH;AAEJ;;AACD,sBAII;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACY,QAAvB;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAM,CAACV,KAAP;AAAA,KAA1C;AAAA,cACKQ,WAAW;AADhB;AAAA;AAAA;AAAA;AAAA,UAJJ;AAcH;KAnDuBP,G","sourcesContent":["import { useEffect } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet imgRef = true; let state = true;\r\n\r\nexport default function Sol() {\r\n    const imgs = {\r\n        sol: '/sol/sol.svg',\r\n        lua: '/lua/noite.svg'\r\n    }\r\n\r\n\r\n    /*  const toggleImage = () => {\r\n        \r\n         !state\r\n         \r\n     }\r\n     \r\n     let getImageName = state ? 'sol' : 'lua'    \r\n     let imageName = getImageName */\r\n\r\n\r\n\r\n\r\n    function toggleDark() {\r\n        console.log(!imgRef)\r\n\r\n        return <img src={imgRef ? imgs.sol : imgs.lua} alt=\"\" />\r\n\r\n    }\r\n    \r\n    function imageToggle(children: boolean) {\r\n        if (state) {\r\n            <img src=\"/sol/sol.svg\" alt=\"\" />\r\n            state = false\r\n        } else {\r\n            <img src=\"/lua/noite.svg\" alt=\"\" />\r\n            state = true\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n           \r\n            \r\n\r\n        <div className={styles.darkMode} onClick={() => !state}>\r\n            {imageToggle()}\r\n\r\n            {/* <img src={state ? imgs.sol : imgs.lua} onClick={() => state ? state = false : state = true}/> */}\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}